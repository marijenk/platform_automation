resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation

- name: installation
  type: gcs-resource
  source:
    bucket: opsman-exports
    json_key: ((opsman_backups_cloud_storage_key))
    regexp: ((foundation))/installation-(.*).zip

- name: state
  type: git
  source:
    branch: master
    uri: https://github.com/calebwashburn/platform-automation-reference

- name: configuration
  type: git
  source:
    branch: master
    uri: https://github.com/calebwashburn/platform-automation-reference
    paths:
    - "environments/((iaas))/((foundation))/pipeline.yml"
    - "environments/((iaas))/((foundation))/config"

- name: director-configuration
  type: git
  source:
    branch: master
    uri: https://github.com/calebwashburn/platform-automation-reference
    paths:
    - "environments/((iaas))/((foundation))/config-director"

- name: lock
  type: pool
  source:
    uri: ((locks_repo))
    branch: master
    username: ((github_username))
    password: ((github_token))
    pool: ((foundation))
    retry_delay: 1m


jobs:
- name: force-unlock
  serial: true
  plan:
  - get: lock
  - put: lock
    params:
      release: lock

- name: lock-director
  serial: true
  plan:
  - aggregate:
    - put: lock
      params: {acquire: true}
    - get: director-configuration
      trigger: true

- name: validate-director-configuration
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
      passed: ["lock-director"]
    - get: platform-automation-image
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: director-configuration/proposed-tasks/credhub-interpolate.yml
    params: &director_credhub_interpolate_params
      CREDHUB_SERVER: ((concourse_url))
      CREDHUB_CA_CERT: ((concourse_credhub_ca))
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_credhub_client_secret))
      PREFIX: '/concourse/((foundation))'
      INTERPOLATION_PATHS: "environments/((iaas))/((foundation))/config-director/secrets"
    input_mapping:
      files: director-configuration

- name: install-opsman
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
      passed: ["validate-director-configuration"]
    - get: state
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: director-configuration/proposed-tasks/credhub-interpolate.yml
    params: *director_credhub_interpolate_params
    input_mapping:
      files: director-configuration

  - task: download-create-opsman
    image: platform-automation-image
    file: director-configuration/proposed-tasks/download-create-opsman.yml
    input_mapping:
      download-config: director-configuration
      state: state
      config: director-configuration
      vars: director-configuration
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/versions/opsman.yml
      STATE_FILE: environments/((iaas))/((foundation))/state/state.yml
      OPSMAN_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/templates/opsman.yml
      VARS_FILES: |
        vars/environments/((iaas))/common-director/opsman.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/infra.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/pivnet.yml

    ensure: &make-state-commit
      do:
        - task: make-commit
          image: platform-automation-image
          file: director-configuration/proposed-tasks/make-commit.yml
          input_mapping:
            repository: state
            file-source: generated-state
          output_mapping:
            repository-commit: state-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: environments/((iaas))/((foundation))/state/state.yml
            GIT_AUTHOR_EMAIL: "pipeline_robot@pivotal.io"
            GIT_AUTHOR_NAME: "Platform Automation"
            COMMIT_MESSAGE: 'Update state file'
        - put: state
          params:
            repository: state-commit
            merge: true

  - task: configure-authentication
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-authentication.yml
    attempts: 20
    input_mapping:
      env: interpolated-files
      config: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml
      AUTH_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/secrets/auth.yml

  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: director-configuration
      env: interpolated-files
      vars: director-configuration
      secrets: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml
      DIRECTOR_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/templates/director.yml
      VARS_FILES: |
        vars/environments/((iaas))/common-director/director.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/infra.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/director.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/director.yml

  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml

- name: export-installation
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
      passed: [ install-opsman ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: director-configuration/proposed-tasks/credhub-interpolate.yml
    params: *director_credhub_interpolate_params
    input_mapping:
      files: director-configuration

  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml
  - put: installation
    params:
      file: installation/installation-*.zip

- name: upgrade-opsman
  plan:
  - aggregate:
    - get: director-configuration
      trigger: true
      passed: [ export-installation ]
    - get: state
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: installation
      passed: [ export-installation ]

  - task: credhub-interpolate
    image: platform-automation-image
    file: director-configuration/proposed-tasks/credhub-interpolate.yml
    params: *director_credhub_interpolate_params
    input_mapping:
      files: director-configuration

  - task: download-upgrade-opsman
    image: platform-automation-image
    file: director-configuration/proposed-tasks/download-upgrade-opsman.yml
    input_mapping:
      download-config: director-configuration
      state: state
      config: director-configuration
      vars: director-configuration
      secrets: interpolated-files
      installation: installation
      env: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/versions/opsman.yml
      STATE_FILE: environments/((iaas))/((foundation))/state/state.yml
      OPSMAN_CONFIG_FILE: environments/((iaas))/((foundation))/config-director/templates/opsman.yml
      VARS_FILES: |
        vars/environments/((iaas))/common-director/opsman.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/infra.yml
        vars/environments/((iaas))/((foundation))/config-director/vars/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/opsman.yml
        secrets/environments/((iaas))/((foundation))/config-director/secrets/pivnet.yml
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml
    ensure: *make-state-commit
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((iaas))/((foundation))/config-director/secrets/env.yml

- name: unlock-director
  serial: true
  plan:
  - get: director-configuration
    trigger: true
    passed:
    - "upgrade-opsman"
  - get: lock
  - put: lock
    params:
      release: lock


- name: lock-tiles
  serial: true
  plan:
  - aggregate:
    - put: lock
      params: {acquire: true}
    - get: configuration
      trigger: true

- name: validate-tile-configuration
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: ["lock-tiles"]
    - get: platform-automation-image
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: configuration/proposed-tasks/credhub-interpolate.yml
    params: &credhub_interpolate_params
      CREDHUB_SERVER: ((concourse_url))
      CREDHUB_CA_CERT: ((concourse_credhub_ca))
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_credhub_client_secret))
      PREFIX: '/concourse/((foundation))'
      INTERPOLATION_PATHS: "environments/((iaas))/((foundation))/config/secrets"
    input_mapping:
      files: configuration


- name: clamav
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ validate-tile-configuration ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: download
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    input_mapping:
      config: configuration
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/clamav.yml
      VARS_FILES: |
        secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml
  - task: apply-runtime-config
    image: platform-automation-image
    file: configuration/proposed-tasks/apply-runtime-config.yml
    input_mapping:
      config: configuration
      vars: configuration
      secrets: interpolated-files
      env: interpolated-files
      files: downloaded-product
    params:
      NAME: clamav
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/clamav.yml
      VARS_FILES: |
        vars/environments/((iaas))/common/clamav.yml
        vars/environments/((iaas))/((foundation))/config/versions/clamav.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: pas
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ clamav ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: download-stage-tile-stemcell
    image: platform-automation-image
    file: configuration/proposed-tasks/download-stage-tile-stemcell.yml
    input_mapping:
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/cf.yml
      DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/cf-stemcell.yml
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

  - task: configure
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/defaults/cf.yml
        vars/environments/((iaas))/common/cf.yml
        vars/environments/((iaas))/((foundation))/config/vars/cf.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/cf.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

  - task: apply-product-changes
    image: platform-automation-image
    file: configuration/proposed-tasks/apply-product-changes.yml
    attempts: 10
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: pas-errands
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ pas ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: run-smoke_tests
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: smoke_tests
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first
  - task: run-push-usage-service
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: push-usage-service
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first
  - task: run-push-apps-manager
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: push-apps-manager
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first
  - task: run-deploy-notifications
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: deploy-notifications
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first
  - task: run-deploy-notifications-ui
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: deploy-notifications-ui
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first
  - task: run-deploy-autoscaler
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: deploy-autoscaler
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first
  - task: run-nfsbrokerpush
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: nfsbrokerpush
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first
  - task: run-test-autoscaling
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/cf.yml
      ERRAND_NAME: deploy-notifications-ui
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: clock_global/first

- name: p-healthwatch
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ pas ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: download-stage-tile-stemcell
    image: platform-automation-image
    file: configuration/proposed-tasks/download-stage-tile-stemcell.yml
    input_mapping:
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-healthwatch.yml
      DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/p-healthwatch-stemcell.yml
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

  - task: configure
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/defaults/p-healthwatch.yml
        vars/environments/((iaas))/common/p-healthwatch.yml
        vars/environments/((iaas))/((foundation))/config/vars/p-healthwatch.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/p-healthwatch.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

  - task: apply-product-changes
    image: platform-automation-image
    file: configuration/proposed-tasks/apply-product-changes.yml
    attempts: 10
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

- name: p-healthwatch-errands
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ p-healthwatch ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration
  - task: push-apps
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      ERRAND_NAME: push-apps
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: healthwatch-forwarder/first
  - task: smoke-tests_tests
    attempts: 5
    image: platform-automation-image
    file: configuration/proposed-tasks/run-errand.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/p-healthwatch.yml
      ERRAND_NAME: smoke-tests
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      INSTANCE: healthwatch-forwarder/first




- name: unlock-tile
  serial: true
  plan:
  - get: configuration
    trigger: true
    passed:
    - "pas-errands"
    - "p-healthwatch-errands"
  - get: lock
  - put: lock
    params:
      release: lock
